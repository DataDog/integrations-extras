# NOTE: You have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python. Multiline strings are treated as
# verbose regular expressions by Black. Use [ ] to denote a significant space
# character.

# Keep black configuration to generate models through validate
# Once ruff exposes a python api we can move to it
[tool.black]
exclude = '''
# Directories
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 120
skip-string-normalization = true

[tool.ruff]
exclude = [
    ".eggs",
    ".tox",
    ".git",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "_build",
    "dist",
    "compat.py",
    "__init__.py",
    "**/datadog_checks/*/vendor/*",
    # Avoid linting or formatting autogenerated files from ddev validate models
    # They are formatted with black and ruff does not yet expose an api to format them
    "**/config_models/instance.py",
    "**/config_models/shared.py",
    "**/config_models/defaults.py",
]
target-version = "py312"
line-length = 120
namespace-packages = ["datadog_checks"]

[tool.ruff.lint]
# Rules were ported over from the legacy flake8 settings for parity
# All the rules can be found here: https://beta.ruff.rs/docs/rules/
select = [
  "B",
  "C",
  "E",
  "F",
  "G",
  "W",
  "I",
  "TID252",
]
ignore = [
  # From legacy flake8 settings
  "E721",
  "E722",
  "E741",
  "B015",
  "B904",
  "B017",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  "B905",  # TODO: remove when we drop Python 2
  # Ignore McCabe complexity
  "C901",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.format]
quote-style = "preserve"

[tool.ruff.lint.isort]
known-first-party = ["{template_config['package_name']}"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.per-file-ignores]
#Tests can use assertions and relative imports
"**/tests/**/*" = ["S101", "TID252"]
"datadog_checks/*/config_models/deprecations.py" = ["E501"]
"tests/models/config_models/deprecations.py" = ["E501"]
