# NOTE: You have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python. Multiline strings are treated as
# verbose regular expressions by Black. Use [ ] to denote a significant space
# character.

[tool.black]
exclude = '''
# Directories
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 120
skip-string-normalization = true

[tool.ruff]
exclude = [
    ".eggs",
    ".tox",
    "build",
    "compat.py",
    "__init__.py",
    "**/datadog_checks/*/vendor/*",
]
target-version = "py38"
line-length = 120
# Import settings from legacy flake8 config
lint.select = [
  "B",
  "C",
  "E",
  "F",
  "G",
  "W",
  "I",
]
lint.ignore = [
  # From legacy flake8 settings
  "E722",
  "E741",
  "B015",
  "B904",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Ignore McCabe complexity
  "C901",
  "B017",
]
lint.unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["{template_config['package_name']}"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
#Tests can use assertions and relative imports
"**/tests/**/*" = ["S101", "TID252"]
"tests/models/config_models/deprecations.py" = ["E501"]
